import React, { useEffect, useState, useLayoutEffect } from 'react';
import Navbar from './Navbar';
import Footer from './Footer';
import { DotLottiePlayer } from '@dotlottie/react-player';
import './AIConsultationPage.css';

const AIConsultationPage: React.FC = () => {
  const [isDarkMode, setIsDarkMode] = useState(() => {
    return document.body.classList.contains('dark-theme');
  });

  // Use useLayoutEffect to check dark mode before render
  useLayoutEffect(() => {
    const checkDarkMode = () => {
      const isDark = document.body.classList.contains('dark-theme');
      setIsDarkMode(isDark);
    };

    // Check initial state
    checkDarkMode();

    // Create observer for body class changes
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === 'class') {
          checkDarkMode();
        }
      });
    });

    // Start observing
    observer.observe(document.body, { attributes: true });

    // Cleanup observer
    return () => observer.disconnect();
  }, []);

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  useEffect(() => {
    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.2 // Trigger when 20% of element is visible
    };

    const handleIntersection = (entries: IntersectionObserverEntry[]) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          // Remove observer after animation has been triggered
          observer.unobserve(entry.target);
        }
      });
    };

    const observer = new IntersectionObserver(handleIntersection, observerOptions);

    // Observe all elements with animation classes
    document.querySelectorAll('.animate-on-scroll').forEach((element) => {
      observer.observe(element);
    });

    return () => observer.disconnect();
  }, []);

  return (
    <div className="ai-consultation-page">
      <Navbar />
      
      <div className="ai-hero-section">
        <div className="container">
          <div className="ai-hero-content animate-on-scroll fade-in-up">
            <h1 className="animate-on-scroll slide-in-left animate-delay-1">T∆∞ V·∫•n AI Cho ƒê√°m C∆∞·ªõi Trong M∆°</h1>
            <p className="animate-on-scroll fade-in-up animate-delay-2">
              S·ª≠ d·ª•ng c√¥ng ngh·ªá tr√≠ tu·ªá nh√¢n t·∫°o ti√™n ti·∫øn ƒë·ªÉ l√™n k·∫ø ho·∫°ch cho ng√†y tr·ªçng ƒë·∫°i c·ªßa b·∫°n.
              Ti·∫øt ki·ªám th·ªùi gian, gi·∫£m stress v√† t·∫°o ra ƒë√°m c∆∞·ªõi ho√†n h·∫£o v·ªõi s·ª± h·ªó tr·ª£ c·ªßa AI.
            </p>
          </div>
          <DotLottiePlayer
            src={isDarkMode
              ? "https://lottie.host/79ed01b9-27c8-458b-82e8-7176b021d544/wg3zxWb9TF.lottie"
              : "https://lottie.host/f9b1866e-22cb-49bd-9cb9-e930c3e40598/lt7ug0D1H2.lottie"
            }
            autoplay
            loop
            className="ai-hero-animation animate-on-scroll slide-in-right animate-delay-3"
          />
        </div>
      </div>

      {/* Unique AI Features */}
      <section className="unique-feature-section">
        <div className="container">
          <div className="feature-content left">
            <div className="feature-text animate-on-scroll slide-in-left">
              <h2 className="animate-on-scroll fade-in-up">T∆∞ V·∫•n ƒêa Chi·ªÅu</h2>
              <p className="animate-on-scroll fade-in-up animate-delay-1">AI c·ªßa ch√∫ng t√¥i kh√¥ng ch·ªâ ƒë∆°n thu·∫ßn tr·∫£ l·ªùi c√¢u h·ªèi, m√† c√≤n ph√¢n t√≠ch v√† ƒë·ªÅ xu·∫•t c√°c gi·∫£i ph√°p t·ªëi ∆∞u d·ª±a tr√™n ng√¢n s√°ch, s·ªü th√≠ch v√† xu h∆∞·ªõng hi·ªán ƒë·∫°i.</p>
              <ul className="feature-list stagger-animation animate-on-scroll">
                <li className="animate-delay-2">Ph√¢n t√≠ch chi ti·∫øt ng√¢n s√°ch</li>
                <li className="animate-delay-3">ƒê·ªÅ xu·∫•t phong c√°ch ph√π h·ª£p</li>
                <li className="animate-delay-4">T·ªëi ∆∞u h√≥a chi ph√≠</li>
              </ul>
            </div>
            <div className="feature-animation animate-on-scroll slide-in-right scale-in animate-delay-2">
              <DotLottiePlayer
                src="https://lottie.host/b7b258dd-6685-46d5-a71f-98d29c2318d7/LR7c8Rtvue.lottie"
                autoplay
                loop
              />
            </div>
          </div>
        </div>
      </section>

      <section className="unique-feature-section alternate">
        <div className="container">
          <div className="feature-content right">
            <div className="feature-animation animate-on-scroll slide-in-left scale-in">
              <DotLottiePlayer
                src="https://lottie.host/3a367d7e-cf33-4e45-8384-ce2eae1c3765/fX4T8Pwuaf.lottie"
                autoplay
                loop
              />
            </div>
            <div className="feature-text animate-on-scroll slide-in-right">
              <h2 className="animate-on-scroll fade-in-up">Tr·ª£ L√Ω L√™n K·∫ø Ho·∫°ch Th√¥ng Minh</h2>
              <p className="animate-on-scroll fade-in-up animate-delay-1">Chatbot AI t·ª± ƒë·ªông t·∫°o timeline chi ti·∫øt v√† nh·∫Øc nh·ªü c√°c m·ªëc quan tr·ªçng, gi√∫p b·∫°n kh√¥ng b·ªè l·ª° b·∫•t k·ª≥ chi ti·∫øt n√†o trong qu√° tr√¨nh chu·∫©n b·ªã.</p>
              <ul className="feature-list stagger-animation animate-on-scroll">
                <li className="animate-delay-2">Timeline t·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh</li>
                <li className="animate-delay-3">Nh·∫Øc nh·ªü th√¥ng minh</li>
                <li className="animate-delay-4">Qu·∫£n l√Ω c√¥ng vi·ªác hi·ªáu qu·∫£</li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      <section className="unique-feature-section">
        <div className="container">
          <div className="feature-content left">
            <div className="feature-text animate-on-scroll slide-in-left">
              <h2 className="animate-on-scroll fade-in-up">K·∫øt N·ªëi Nh√† Cung C·∫•p</h2>
              <p className="animate-on-scroll fade-in-up animate-delay-1">AI kh√¥ng ch·ªâ g·ª£i √Ω m√† c√≤n k·∫øt n·ªëi b·∫°n v·ªõi c√°c nh√† cung c·∫•p d·ªãch v·ª• uy t√≠n, ph√π h·ª£p v·ªõi ng√¢n s√°ch v√† phong c√°ch c·ªßa b·∫°n.</p>
              <ul className="feature-list stagger-animation animate-on-scroll">
                <li className="animate-delay-2">ƒê√°nh gi√° ƒë·ªôc l·∫≠p</li>
                <li className="animate-delay-3">So s√°nh gi√° th√¥ng minh</li>
                <li className="animate-delay-4">ƒê·∫∑t l·ªãch t·ª± ƒë·ªông</li>
              </ul>
            </div>
            <div className="feature-animation animate-on-scroll slide-in-right scale-in animate-delay-2">
              <DotLottiePlayer
                src="https://lottie.host/e2e9f47c-e0b1-4cd9-8521-888d5bf664e4/rsWkyvE8su.lottie"
                autoplay
                loop
              />
            </div>
          </div>
        </div>
      </section>

      {/* Why Choose Us Section */}
      <section className="why-choose-us">
        <div className="container">
          <h2 className="section-title animate-on-scroll fade-in-up">
            T·∫°i Sao Ch·ªçn Chatbot AI C·ªßa Cuoidi.vn?
          </h2>
          <div className="benefits-grid">
            {[
              {
                icon: 'üß†',
                title: 'AI Th√¥ng Minh',
                description: 'ƒê∆∞·ª£c hu·∫•n luy·ªán v·ªõi d·ªØ li·ªáu t·ª´ h∆°n 10,000+ ƒë√°m c∆∞·ªõi th√†nh c√¥ng, hi·ªÉu r√µ vƒÉn h√≥a Vi·ªát Nam.',
                delay: 1
              },
              {
                icon: 'üéØ',
                title: 'T∆∞ V·∫•n C√° Nh√¢n H√≥a',
                description: 'ƒê·ªÅ xu·∫•t ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh theo s·ªü th√≠ch, ng√¢n s√°ch v√† phong c√°ch ri√™ng c·ªßa b·∫°n.',
                delay: 2
              },
              {
                icon: '‚ö°',
                title: 'Ph·∫£n H·ªìi T·ª©c Th√¨',
                description: 'Tr·∫£ l·ªùi ngay l·∫≠p t·ª©c 24/7, ti·∫øt ki·ªám th·ªùi gian ch·ªù ƒë·ª£i t∆∞ v·∫•n vi√™n.',
                delay: 3
              },
              {
                icon: 'üîÑ',
                title: 'T√≠ch H·ª£p ƒêa D·ªãch V·ª•',
                description: 'K·∫øt n·ªëi tr·ª±c ti·∫øp v·ªõi c√°c nh√† cung c·∫•p d·ªãch v·ª• c∆∞·ªõi uy t√≠n tr√™n n·ªÅn t·∫£ng.',
                delay: 4
              },
              {
                icon: 'üîí',
                title: 'B·∫£o M·∫≠t Th√¥ng Tin',
                description: 'ƒê·∫£m b·∫£o an to√†n d·ªØ li·ªáu c√° nh√¢n v·ªõi c√¥ng ngh·ªá m√£ h√≥a ti√™n ti·∫øn.',
                delay: 5
              },
              {
                icon: 'üìà',
                title: 'Lu√¥n C·∫≠p Nh·∫≠t',
                description: 'Th∆∞·ªùng xuy√™n h·ªçc h·ªèi xu h∆∞·ªõng c∆∞·ªõi m·ªõi nh·∫•t ƒë·ªÉ ƒë∆∞a ra g·ª£i √Ω ph√π h·ª£p.',
                delay: 6
              }
            ].map((benefit, index) => (
              <div
                key={index}
                className={`benefit-item animate-on-scroll fade-in-up animate-delay-${benefit.delay}`}
              >
                <i className="benefit-icon">{benefit.icon}</i>
                <h4>{benefit.title}</h4>
                <p>{benefit.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing Comparison Section */}
      <section className="pricing-comparison">
        <div className="container">
          <h2 className="animate-on-scroll fade-in-up">B·∫£ng So S√°nh G√≥i D·ªãch V·ª•</h2>
          <div className="pricing-table animate-on-scroll fade-in-up">
            <div className="pricing-header animate-on-scroll fade-in-up">
              <div className="feature-column">T√≠nh NƒÉng</div>
              <div className="plan-column">C∆° B·∫£n</div>
              <div className="plan-column">N√¢ng Cao</div>
              <div className="plan-column">Premium</div>
            </div>
            <div className="pricing-body stagger-animation">
              {[
                { feature: "T∆∞ v·∫•n qua chatbot", basic: true, advanced: true, premium: true },
                { feature: "L·∫≠p k·∫ø ho·∫°ch c∆° b·∫£n", basic: true, advanced: true, premium: true },
                { feature: "G·ª£i √Ω phong c√°ch", basic: false, advanced: true, premium: true },
                { feature: "T∆∞ v·∫•n ng√¢n s√°ch", basic: false, advanced: true, premium: true },
                { feature: "H·ªó tr·ª£ 24/7", basic: false, advanced: false, premium: true },
                { feature: "T∆∞ v·∫•n vi√™n ri√™ng", basic: false, advanced: false, premium: true },
              ].map((row, index) => (
                <div key={index} className="pricing-row">
                  <div className="feature-cell">{row.feature}</div>
                  <div className="plan-cell animate-on-scroll fade-in-up animate-delay-1">{row.basic ? "‚úì" : "√ó"}</div>
                  <div className="plan-cell animate-on-scroll fade-in-up animate-delay-2">{row.advanced ? "‚úì" : "√ó"}</div>
                  <div className="plan-cell animate-on-scroll fade-in-up animate-delay-3">{row.premium ? "‚úì" : "√ó"}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Advertisement Banner */}
      <section className="ad-banner">
        <div className="container">
          <div className="banner-content animate-on-scroll scale-in">
            <h2 className="animate-on-scroll fade-in-up">B·∫Øt ƒê·∫ßu L·∫≠p K·∫ø Ho·∫°ch Ngay H√¥m Nay!</h2>
            <p className="animate-on-scroll fade-in-up animate-delay-1">ƒêƒÉng k√Ω ngay ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c s·ª± h·ªó tr·ª£ t·ªët nh·∫•t t·ª´ AI c·ªßa ch√∫ng t√¥i.</p>
            <button className="cta-button animate-on-scroll fade-in-up animate-delay-2">ƒêƒÉng K√Ω Ngay</button>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default AIConsultationPage;

